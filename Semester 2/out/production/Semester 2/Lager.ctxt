#BlueJ class context
comment0.target=Lager
comment0.text=\r\n\ Klasse\ zum\ erstellen\ eines\ Lagers,\ in\ dem\ man\ mehrere\ Artikel\ der\ klasse\ Artikel.java\ speichern\ kann.\r\n\r\n\ @Marc_Perwark_&_Jonas_Neu\r\n
comment1.params=arraylaenge
comment1.target=Lager(int)
comment1.text=\r\n\ Konstruktor\ zum\ initialisiern\ der\ Lagergroesse\r\n\r\n\ @param\ arraylaenge\ gibt\ an\ wie\ viele\ Speicherplaetze\ im\ Array\ vergeben\ werden\r\n
comment10.params=artikelNr\ prozent
comment10.target=void\ aenderePreisEinesArtikels(int,\ double)
comment10.text=\r\n\r\n\ Methode\ zum\ aendern\ des\ preises\ eines\ Artikel\r\n\r\n\ @param\ artikelNr\ ist\ die\ Artikelnummer\ des\ zu\ aendernden\ Artikels\ als\ Ganzzahl\r\n\ @param\ prozent\ uebergebene\ Prozentzahl\ als\ double\r\n
comment11.params=prozent
comment11.target=void\ aenderePreisAllerArtikel(double)
comment11.text=\r\n\r\n\ Methode\ zum\ aendern\ des\ Preises\ aller\ Artikel\r\n\r\n\ @param\ prozent\ uebergebene\ Prozentzahl\ als\ double\r\n
comment12.params=
comment12.target=java.lang.String\ ausgebenBestandsListe()
comment12.text=\r\n\ Methode\ zum\ ausgeben\ des\ ganzen\ Lagers\ und\ den\ Artikeln,\ die\ sich\ darin\ befinden\ mir\ dem\ Gesamtpreis\r\n\ \r\n\ @return\ ausgabe\ die\ Ausgabe\ des\ ganzen\ Lagers\ und\ den\ Artikeln,\ die\ sich\ darin\ befinden\ als\ String\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Methode\ zum\ ausgeben\ des\ ganzen\ Lagers\ und\ den\ Artikeln,\ die\ sich\ darin\ befinden\r\n\ \r\n\ @return\ ausgabe\ die\ Ausgabe\ des\ ganzen\ Lagers\ und\ den\ Artikeln,\ die\ sich\ darin\ befinden\ als\ String\r\n
comment14.params=index
comment14.target=Artikel\ getArtikel(int)
comment14.text=\r\n\ Methode\ zum\ ausgeben\ eines\ Artikels\ anhand\ seines\ index\r\n\ \r\n\ @param\ index\ der\ index\ als\ Ganzzahl\ von\ 1\ bis\ 10\r\n\ @return\ Artikel\ der\ Artikel\ and\ der\ stelle\ Index\r\n
comment15.params=
comment15.target=int\ getArtikelAnzahl()
comment15.text=\r\n\ Methode\ zum\ ausgeben\ der\ Anzahl\ aller\ Artikel\r\n\ \r\n\ @return\ countArtikel\ Die\ Anzahl\ der\ Artikel\r\n
comment16.params=artikel
comment16.target=double\ getGesamt(Artikel)
comment16.text=\r\n\ Methode\ zum\ berechnen\ des\ Gesamten\ Wert\ des\ Bestands\ eines\ Artikels\r\n\ \r\n\ @param\ artikel\ Jeweiliger\ Artikel,\ dessen\ Gesamtwert\ berechnet\ werden\ soll\r\n\ @retrun\ gesamt\ Der\ gesamte,\ ausgerechnete\ Wert\ der\ Artikel\r\n
comment17.params=
comment17.target=int\ getLagerGroesse()
comment17.text=\r\n\ Get\ Methode\ zur\ ausgabe\ der\ Lagergroesse\ als\ Ganzzahl\r\n\r\n\ @return\ rueckgabe\ Die\ Groesse\ des\ Lagers\ als\ Ganzzahl\r\n
comment18.params=filter
comment18.target=Artikel\ filter(java.util.function.Predicate)
comment19.params=filter\ artikelConsumer
comment19.target=void\ applyToSomeArticles(java.util.function.Predicate,\ java.util.function.Consumer)
comment2.params=
comment2.target=Lager()
comment2.text=\r\n\ Konstruktor\ zum\ initialisiern\ der\ maximalen\ Lagergroesse\ 10\r\n
comment20.params=filter
comment20.target=Artikel[]\ filterAll(java.util.function.Predicate[])
comment21.params=filter\ kriterium
comment21.target=Artikel[]\ getArticles(java.util.function.Predicate,\ java.util.function.BiPredicate)
comment3.params=operation
comment3.target=void\ applyToArticles(java.util.function.Consumer)
comment4.params=kriterium
comment4.target=Artikel[]\ getSorted(java.util.function.BiPredicate)
comment4.text=\r\n\ Methode\ zum\ Sortieren\ der\ Artikel\ im\ Lager.\r\n\ \r\n\ @param\ comparator\ Das\ Sortierkriterium\ als\ Comparator<Artikel>.\r\n\ @return\ sortedArray\ Ein\ sortiertes\ Array\ der\ Artikel\ im\ Lager.\r\n
comment5.params=artikel
comment5.target=void\ legeAnArtikel(Artikel)
comment5.text=\r\n\ Methode\ zum\ Anlegen\ eines\ Artikels\r\n\ \r\n\ @param\ artikel\ artikel\ ist\ der\ Artikel\ der\ hinzugefuegt\ werden\ soll\r\n\ @throws\ IllegalArgumentException\ wenn\ der\ Artikel\ null\ ist\r\n\ @throws\ IllegalArgumentException\ wenn\ der\ Lagerplatz\ belegt\ ist\r\n\ @throws\ IllegalArgumentException\ wenn\ der\ Artikel\ bereits\ existiert\r\n
comment6.params=artikelNr
comment6.target=void\ entferneArtikel(int)
comment6.text=\r\n\ Methode\ zum\ entfernen\ eines\ Artikels\r\n\ \r\n\ @param\ artikelNr\ die\ Artikelnummer\ des\ Artikels,\ der\ entfernt\ werden\ soll.\r\n\ @throws\ IllegalArgumentException\ wenn\ der\ Artikel\ nicht\ gefunden\ wird.\r\n
comment7.params=artikelNr
comment7.target=int\ findeArtikelIndex(int)
comment7.text=\r\n\ Methode\ zum\ finden\ des\ Index\ im\ Lager\ eines\ Artikels\ anhand\ der\ artikelNr\r\n\ \r\n\ @param\ artikelNr\ Die\ Artikelnummer\ des\ Artikels,\ dessen\ index\ ausgegeben\ werden\ soll\r\n\ @return\ ARTIKEL_NICHT_GEFUNDEN\ \=\ -1\ bedeutet\ der\ Artikel\ befindet\ sich\ nicht\ im\ Lager\ oder\ i\ wenn\ die\ Artikelnummer\ gefunden\ wurde\r\n
comment8.params=artikelNr\ zugang
comment8.target=void\ bucheZugang(int,\ int)
comment8.text=\r\n\ Methode\ zum\ buchen\ einer\ Bestandserhoehung\ eines\ Artikels\r\n\ \r\n\ @param\ artikelNr\ Die\ Artikelnummer\ des\ Artikels,\ dessen\ Bestand\ erhoeht\ werden\ soll\r\n\ @param\ zugang\ Der\ Zugang\ als\ Ganzzahl\r\n
comment9.params=artikelNr\ abgang
comment9.target=void\ bucheAbgang(int,\ int)
comment9.text=\r\n\ Methode\ zum\ buchen\ einer\ Bestandsverminderung\ eines\ Artikels\r\n\ \r\n\ @param\ artikelNr\ Die\ Artikelnummer\ des\ Artikels,\ dessen\ Bestand\ erhoeht\ werden\ soll\r\n\ @param\ abgang\ Der\ Abgang\ als\ Ganzzahl\r\n
numComments=22
