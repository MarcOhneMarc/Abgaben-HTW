#BlueJ class context
comment0.target=MinHeapKlasse
comment0.text=\r\n\ Klasse\ zur\ Implementierung\ eines\ MinHeap\ als\ generische\ Klasse,\ welcher\ Objekte\ speichern\ kann,\ die\r\n\ das\ Interface\ java.lang.Comparable\ implementieren.\r\n\ \r\n\ @JonasNeu_MarcPerwak\r\n
comment1.params=kapazitaet
comment1.target=MinHeapKlasse(int)
comment1.text=\r\n\ Erzeugt\ eine\ neue\ Instanz\ der\ MinHeapKlasse\ mit\ der\ angegebenen\ Kapazit\u00E4t.\r\n\r\n\ @param\ kapazitaet\ die\ maximale\ Kapazit\u00E4t\ des\ Min-Heaps\r\n
comment10.params=a
comment10.target=java.lang.Object[]\ toArray(java.lang.Object[])
comment11.params=e
comment11.target=boolean\ add(java.lang.Comparable)
comment12.params=o
comment12.target=boolean\ remove(java.lang.Object)
comment13.params=c
comment13.target=boolean\ containsAll(java.util.Collection)
comment14.params=c
comment14.target=boolean\ addAll(java.util.Collection)
comment15.params=c
comment15.target=boolean\ removeAll(java.util.Collection)
comment16.params=c
comment16.target=boolean\ retainAll(java.util.Collection)
comment17.params=
comment17.target=void\ clear()
comment18.params=
comment18.target=java.lang.Comparable\ remove()
comment19.params=
comment19.target=java.lang.Comparable\ element()
comment2.params=e
comment2.target=boolean\ offer(java.lang.Comparable)
comment2.text=\r\n\ F\u00FCgt\ das\ angegebene\ Element\ in\ den\ Min-Heap\ ein.\r\n\r\n\ @param\ e\ das\ einzuf\u00FCgende\ Element\r\n\ @return\ true,\ wenn\ das\ Element\ erfolgreich\ eingef\u00FCgt\ wurde,\ andernfalls\ false\r\n
comment3.params=
comment3.target=java.lang.Comparable\ poll()
comment3.text=\r\n\ Entfernt\ und\ gibt\ das\ kleinste\ Element\ aus\ dem\ Min-Heap\ zur\u00FCck.\r\n\r\n\ @return\ das\ kleinste\ Element\ im\ Min-Heap,\ oder\ null,\ wenn\ der\ Heap\ leer\ ist\r\n
comment4.params=
comment4.target=java.lang.Comparable\ peek()
comment4.text=\r\n\ Gibt\ den\ Kopf\ Min-Heap\ zur\u00FCck.\r\n\r\n\ @return\ Der\ Kopf\ im\ Min-Heap,\ oder\ null,\ wenn\ der\ Heap\ leer\ ist\r\n
comment5.params=
comment5.target=int\ size()
comment6.params=
comment6.target=boolean\ isEmpty()
comment7.params=o
comment7.target=boolean\ contains(java.lang.Object)
comment8.params=
comment8.target=java.util.Iterator\ iterator()
comment9.params=
comment9.target=java.lang.Object[]\ toArray()
numComments=20
