#BlueJ class context
comment0.target=NumberCruncherAnonym
comment0.text=\r\n\ NumberCruncherAnonym\ besitzt\ ein\ float-Array,\ welches\ \u00FCber\ den\ Konstruktor\ \r\n\ uebergeben\ wird.Auf\ das\ Float\ array\ werden\ mit\ der\ Methode\ crunch\ verschiedene\r\n\ Operationen\ angewandt.\r\n\r\n\ \r\n\ @jonas_neu_&_marc_perwak\r\n\ @25.04.2023\r\n
comment1.params=numbers
comment1.target=NumberCruncherAnonym(float[])
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ NumberCruncherAnonym\r\n\ \r\n\ @param\ numbers\ Das\ Array\ mit\ den\ Float\ werten\r\n
comment2.params=operations
comment2.target=void\ crunch(java.lang.String[])
comment2.text=\r\n\ Diese\ Methode\ gibt\ an,\ welche\ Operationen\ auf\ das\ float-Array\r\n\ angewendet\ werden\ m\u00FCssen.\r\n\ \r\n\ @param\ operations\ Die\ auszufuehrenden\ Operationen\r\n
comment3.params=numbers
comment3.target=float[]\ performOperation(float[])
comment4.params=numbers
comment4.target=float[]\ performOperation(float[])
comment5.params=numbers
comment5.target=float[]\ performOperation(float[])
comment6.params=numbers
comment6.target=float[]\ performOperation(float[])
comment7.params=numbers
comment7.target=float[]\ performOperation(float[])
comment8.params=
comment8.target=float[]\ getNumbers()
comment8.text=\r\n\ Diese\ Methode\ gibt\ das\ float-Array\ der\ Klasse\ zur\u00FCck.\r\n\ \r\n\ @return\ numbers\ Das\ float\ array\ numbers\r\n
comment9.params=toSort\ sorted
comment9.target=float[][]\ bubbleSort(float[],\ float[])
comment9.text=\r\n\ Hilfsmethode\ zum\ Sortieren\ und\ ruecksortieren\ der\ Arrays\ unter\r\n\ Verwendung\ von\ Bubble\ Sort\r\n\ \r\n\ @param\ toSort\ das\ zu\ sortierende\ Array\r\n\ @param\ sorted\ das\ bereits\ sortierte\ array,\ welches\ umgekehrt\ sortiert\ wird\r\n
numComments=10
