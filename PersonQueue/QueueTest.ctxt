#BlueJ class context
comment0.target=QueueTest
comment0.text=\r\n\ Class\ to\ test\ a\ Queue\r\n
comment1.params=
comment1.target=QueueTest()
comment10.params=
comment10.target=void\ empty()
comment10.text=\r\n\ Tests\ if\ queue\ is\ empty\r\n
comment11.params=
comment11.target=void\ full()
comment11.text=\r\n\ Tests\ if\ queue\ is\ full\r\n
comment12.params=
comment12.target=void\ size()
comment12.text=\r\n\ Return\ of\ queue\ size\r\n
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ Mainloop\ of\ the\ program\r\n
comment3.params=
comment3.target=void\ menu()
comment3.text=\r\n\ Text\ of\ the\ Main\ Menu\r\n
comment4.params=
comment4.target=int\ readFunction()
comment4.text=\r\n\ Read\ in\ which\ function\ should\ be\ executed\r\n\r\n\ @return\ function\ the\ function\ which\ should\ be\ executed\r\n
comment5.params=function
comment5.target=void\ executeFunction(int)
comment5.text=\r\n\ Query\ which\ function\ should\ be\ executed\r\n\r\n\ @param\ function\ specifies\ the\ function\ to\ be\ executed\ as\ an\ integer\r\n
comment6.params=
comment6.target=Queue\ createQueue()
comment6.text=\r\n\ Standart-Konstruktor\ oder\ Konstruktor\ zum\ initialisiern\ der\ Lagergroesse\ wird\ aufgerufen\r\n\r\n\ @return\ arraylaenge\ gibt\ an\ wie\ viele\ speicherplaetze\ im\ Array\ vergeben\ werden\r\n
comment7.params=
comment7.target=void\ addLast()
comment7.text=\r\n\ Adds\ a\ object\ to\ the\ end\ of\ the\ queue\r\n
comment8.params=
comment8.target=void\ removeFirst()
comment8.text=\r\n\ Deletes\ the\ first\ object\ in\ Queue\r\n
comment9.params=
comment9.target=void\ get()
comment9.text=\r\n\ Get\ the\ object\ in\ queue\ on\ position\ 'i'\r\n
numComments=14
